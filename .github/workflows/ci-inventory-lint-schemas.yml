name: CI · Inventory + Lint + Schemas

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.webp'
      - '**/*.pdf'
      - '**/*.md'
      - 'private/infra/scripts/logs/**'
      - '**/legacy/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.webp'
      - '**/*.pdf'
      - '**/*.md'
      - 'private/infra/scripts/logs/**'
      - '**/legacy/**'
  workflow_dispatch: {}

permissions:
  contents: read

concurrency:
  group: ci-inventory-${{ github.ref }}
  cancel-in-progress: true

env:
  LOG_DIR: private/infra/scripts/logs
  SCHEMAS_DIR: private/quality/data-contracts
  NODE_VERSION: '20'
  PY_VERSION: '3.11'

jobs:
  inventory_lint_validate:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare log dir
        run: mkdir -p "$LOG_DIR"

      - name: Setup Node (no cache to avoid lockfile warning)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: Install CLI tools
        run: |
          python -m pip install --upgrade pip
          pip install --upgrade ruff jsonschema
          npm i -g markdownlint-cli @biomejs/biome ajv-cli ajv-formats

      # =========================
      # Repo Inventory (con fallback simple)
      # =========================
      - name: Repo inventory
        run: |
          set -e
          if [ -f "private/quality/console/pipelines/scan_repo.py" ]; then
            python private/quality/console/pipelines/scan_repo.py --out "$LOG_DIR/inventory.json" || true
          elif [ -f "private/quality/pipelines/scan_repo.py" ]; then
            python private/quality/pipelines/scan_repo.py --out "$LOG_DIR/inventory.json" || true
          elif [ -f "private/quality/widgets/pipelines/scan_repo.py" ]; then
            python private/quality/widgets/pipelines/scan_repo.py --out "$LOG_DIR/inventory.json" || true
          elif [ -f "private/infra/scripts/scan_repo.py" ]; then
            python private/infra/scripts/scan_repo.py --out "$LOG_DIR/inventory.json" || true
          else
            ts="$(date -u +"%Y-%m-%dT%H:%M:%SZ")"
            echo "{\"generated_at\":\"$ts\",\"note\":\"fallback inventory\",\"files\":0}" > "$LOG_DIR/inventory.json"
          fi

      # =========================
      # Lint
      # =========================
      - name: Lint Markdown
        run: markdownlint "**/*.md" --ignore "node_modules" --json > "$LOG_DIR/markdownlint.json" || true

      - name: Lint Python (ruff)
        run: ruff check . --output-format=json > "$LOG_DIR/ruff.json" || true

      - name: Lint JS/TS (biome)
        run: biome lint . --reporter=json > "$LOG_DIR/biome.json" || true

      # =========================
      # Validate JSON against schemas (AJV genérico)
      # =========================
      - name: Validate JSON against schemas (AJV)
        run: |
          set +e
          rc=0
          if [ -d "$SCHEMAS_DIR" ]; then
            for s in "$SCHEMAS_DIR"/*.schema.json; do
              [ -f "$s" ] || continue
              git ls-files | grep -Ei '\.json$' | grep -v '\.schema\.json' | while read -r d; do
                ajv -c ajv-formats -s "$s" -d "$d" --strict=false >> "$LOG_DIR/schemas_generic.txt" 2>&1 || rc=1
              done
            done
          fi
          echo "{\"ok\": $([ $rc -eq 0 ] && echo true || echo false) }" > "$LOG_DIR/schema_results.json"
          exit 0

      - name: Summary
        run: |
          echo "## Inventory & Lint & Schemas" >> $GITHUB_STEP_SUMMARY
          echo "- LOG_DIR: \`$LOG_DIR\`" >> $GITHUB_STEP_SUMMARY
          echo "- SCHEMAS_DIR: \`$SCHEMAS_DIR\`" >> $GITHUB_STEP_SUMMARY
          echo "- Artifacts: inventory.json, markdownlint.json, ruff.json, biome.json, schema_results.json" >> $GITHUB_STEP_SUMMARY

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: inventory-and-schemas-${{ github.run_number }}
          path: ${{ env.LOG_DIR }}/**
          if-no-files-found: warn
