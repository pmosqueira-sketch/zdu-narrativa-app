name: CI · DevSecOps KPIs

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.webp'
      - '**/*.pdf'
      - '**/*.md'
      - 'private/infra/scripts/logs/**'
      - '**/legacy/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.webp'
      - '**/*.pdf'
      - '**/*.md'
      - 'private/infra/scripts/logs/**'
      - '**/legacy/**'
  workflow_dispatch: {}

permissions:
  contents: read

env:
  LOG_DIR: private/infra/scripts/logs
  PY_VERSION: "3.11"
  NODE_VERSION: "20"

jobs:
  kpis:
    runs-on: ubuntu-latest
    timeout-minutes: 20

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: Setup Node (no cache)
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Ensure dirs
        run: mkdir -p "${LOG_DIR}"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install ruff
          npm i -g markdownlint-cli

      # ---------- Insumos ligeros ----------
      - name: Lint Markdown → markdownlint.json
        run: markdownlint "**/*.md" --ignore "node_modules" --json > "$LOG_DIR/markdownlint.json" || true

      - name: Lint Python → ruff.json
        run: ruff check . --output-format=json > "$LOG_DIR/ruff.json" || true

      - name: List inputs before KPIs
        run: |
          echo "== LOG_DIR content =="
          ls -la "${LOG_DIR}" || true

      # ---------- KPIs ----------
      - name: Build KPIs
        run: |
          python private/quality/pipelines/build_devsecops_kpis.py \
            --logs-root "${LOG_DIR}" \
            --out "devsecops_kpis.json"

      - name: Check KPIs file exists
        run: |
          if [ ! -f "${LOG_DIR}/devsecops_kpis.json" ]; then
            echo "::warning::KPIs output not found at ${LOG_DIR}/devsecops_kpis.json"
            echo "{}" > "${LOG_DIR}/devsecops_kpis.json"
          fi
          echo "KPIs size:"; wc -c "${LOG_DIR}/devsecops_kpis.json" || true
          echo "Head:"; head -c 500 "${LOG_DIR}/devsecops_kpis.json" || true

      - name: Summary
        if: always()
        run: |
          echo "## DevSecOps KPIs" >> $GITHUB_STEP_SUMMARY
          echo "- LOG_DIR: \`${LOG_DIR}\`" >> $GITHUB_STEP_SUMMARY
          if [ -f "${LOG_DIR}/devsecops_kpis.json" ]; then
            echo "- Output: \`devsecops_kpis.json\` ✅" >> $GITHUB_STEP_SUMMARY
            head -c 400 "${LOG_DIR}/devsecops_kpis.json" >> $GITHUB_STEP_SUMMARY || true
          else
            echo "- Output: missing ❌" >> $GITHUB_STEP_SUMMARY
          fi

      - name: Upload KPIs artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: devsecops-kpis
          path: ${{ env.LOG_DIR }}/devsecops_kpis.json
          if-no-files-found: warn
