name: CI Â· Security Posture

on:
  workflow_dispatch:
  push:
    branches: [ main, master, develop ]
    paths:
      - private/quality/pipelines/sec_posture.py
      - private/quality/data-contracts/security_posture.schema.json
      - .github/workflows/ci-security-posture.yml

permissions:
  contents: read

concurrency:
  group: ci-sec-posture-${{ github.ref }}
  cancel-in-progress: true

env:
  LOG_DIR: private/infra/scripts/logs
  SCHEMAS_DIR: private/quality/data-contracts
  PY_VERSION: '3.11'

jobs:
  sec_posture:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Prepare log dir
        run: mkdir -p "$LOG_DIR"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}
          cache: 'pip'

      - name: Install deps (jsonschema + optional requirements.txt)
        run: |
          pip install --upgrade jsonschema
          test -f private/quality/pipelines/requirements.txt && pip install -r private/quality/pipelines/requirements.txt || true

      - name: Run sec_posture.py
        run: |
          if [ -f "private/quality/pipelines/sec_posture.py" ]; then
            python private/quality/pipelines/sec_posture.py --out "$LOG_DIR/security_posture.json" 2>&1 | tee "$LOG_DIR/sec_posture.log" || true
            # Fallback si no soporta --out
            test -s "$LOG_DIR/security_posture.json" || python private/quality/pipelines/sec_posture.py > "$LOG_DIR/security_posture.json" 2>>"$LOG_DIR/sec_posture.log" || true
          else
            echo '{}' > "$LOG_DIR/security_posture.json"
          fi

      - name: Validate security_posture.json with Python jsonschema
        run: |
          python - <<'PY'
import json, sys, os
from jsonschema import Draft7Validator
schema_path = os.path.join("private","quality","data-contracts","security_posture.schema.json")
data_path   = os.path.join("private","infra","scripts","logs","security_posture.json")
if not os.path.isfile(schema_path) or not os.path.isfile(data_path):
    print("Schema or data not found; skipping strict validation.")
    sys.exit(0)
schema = json.load(open(schema_path))
data   = json.load(open(data_path))
errs = sorted(Draft7Validator(schema).iter_errors(data), key=lambda e: e.path)
if errs:
    print("Validation errors:")
    for e in errs:
        print("-", e.message, "at", "/".join(map(str,e.path)))
else:
    print("OK: security_posture.json matches schema.")
PY

      - name: Summary
        run: |
          echo "## Security Posture" >> $GITHUB_STEP_SUMMARY
          echo "- Output: \`$LOG_DIR/security_posture.json\`" >> $GITHUB_STEP_SUMMARY

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: security-posture-${{ github.run_number }}
          path: |
            ${{ env.LOG_DIR }}/security_posture.json
            ${{ env.LOG_DIR }}/sec_posture.log
          if-no-files-found: warn
