name: CI · Security Posture

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.webp'
      - '**/*.pdf'
      - '**/*.md'
      - 'private/infra/scripts/logs/**'
      - '**/legacy/**'
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.webp'
      - '**/*.pdf'
      - '**/*.md'
      - 'private/infra/scripts/logs/**'
      - '**/legacy/**'
  workflow_dispatch: {}

permissions:
  contents: read

env:
  LOG_DIR: private/infra/scripts/logs
  SECURITY_BASE: private/infra/scripts/logs
  PY_VERSION: "3.11"

jobs:
  security_posture:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: Ensure dirs
        run: mkdir -p "${LOG_DIR}"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema

      - name: Inspect base
        run: |
          echo "SECURITY_BASE=${SECURITY_BASE}"
          if [ -d "${SECURITY_BASE}" ]; then
            echo "== SECURITY_BASE contents ==" && ls -la "${SECURITY_BASE}" || true
          else
            echo "::warning::SECURITY_BASE does not exist: ${SECURITY_BASE}"
          fi

      - name: Build Security Posture
        continue-on-error: true
        run: |
          python private/quality/pipelines/sec_posture.py \
            --base "${SECURITY_BASE}" \
            --owner "pmosqueira-sketch" \
            --out "security_posture.json"

      - name: Synthesize posture if empty (lint + schemas)
        run: |
          # si no existe o está vacío, sintetiza a partir de ruff/markdownlint/schema_results
          if [ ! -s "${LOG_DIR}/security_posture.json" ]; then
            cat > /tmp/synth_posture.py <<'PY'
import os, json, datetime as dt
LOG=os.environ.get("LOG_DIR","private/infra/scripts/logs")
def loadj(name):
    p=os.path.join(LOG,name)
    try:
        with open(p,'r',encoding='utf-8') as f: return json.load(f)
    except: return None
ruff = loadj('ruff.json') or []
md   = loadj('markdownlint.json') or []
sche = loadj('schema_results.json') or {}
def count_ruff_errors(items):
    try: return sum(1 for _ in items)
    except: return 0
def count_md_errors(items):
    try: return len(items)
    except: return 0
summary = {
  "generated_at": dt.datetime.utcnow().isoformat()+"Z",
  "sources": [p for p in ["ruff.json","markdownlint.json","schema_results.json"] if os.path.isfile(os.path.join(LOG,p))],
  "summary": {
    "lint_python_issues": count_ruff_errors(ruff),
    "lint_markdown_issues": count_md_errors(md),
    "schema_ok": bool(sche.get("ok", False))
  },
  "findings": []
}
os.makedirs(LOG, exist_ok=True)
with open(os.path.join(LOG,"security_posture.json"),"w",encoding="utf-8") as f:
    json.dump(summary, f, indent=2, ensure_ascii=False)
print("Synthesized security_posture.json")
PY
            python /tmp/synth_posture.py
          fi

      - name: Verify output exists
        run: |
          echo "== LOG_DIR contents =="
          ls -la "${LOG_DIR}" || true
          if [ ! -f "${LOG_DIR}/security_posture.json" ]; then
            echo "::warning::security_posture.json no encontrado. Creando vacío para no romper el upload."
            echo "{}" > "${LOG_DIR}/security_posture.json"
          fi
          echo "Size:"; wc -c "${LOG_DIR}/security_posture.json" || true
          echo "Head:"; head -c 500 "${LOG_DIR}/security_posture.json" || true

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-posture
          path: ${{ env.LOG_DIR }}/security_posture.json
          if-no-files-found: warn

      - name: Summary
        if: always()
        run: |
          echo "## Security Posture" >> $GITHUB_STEP_SUMMARY
          echo "- LOG_DIR: \`${LOG_DIR}\`" >> $GITHUB_STEP_SUMMARY
          if [ -f "${LOG_DIR}/security_posture.json" ]; then
            echo "- Output: \`security_posture.json\` ✅" >> $GITHUB_STEP_SUMMARY
            head -c 400 "${LOG_DIR}/security_posture.json" >> $GITHUB_STEP_SUMMARY || true
          else
            echo "- Output: missing ❌" >> $GITHUB_STEP_SUMMARY
