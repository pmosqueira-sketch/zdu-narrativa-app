name: CI · Security posture (scan + schema validation)

on:
  workflow_dispatch: {}
  push:
    branches: [ main, master, develop ]
  pull_request:
    branches: [ main, master, develop ]

permissions:
  contents: read

concurrency:
  group: ci-security-posture-${{ github.ref }}
  cancel-in-progress: true

env:
  LOG_DIR: private/infra/scripts/logs
  SCHEMAS_DIR: private/quality/data-contracts
  PY_VERSION: '3.11'

jobs:
  security_posture:
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare log dir
        run: mkdir -p "$LOG_DIR"

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}
          cache: 'pip'

      - name: Install deps (python + ajv)
        run: |
          pip install --upgrade jsonschema
          npm i -g ajv-cli ajv-formats

      # ========= Generate posture =========
      - name: Generate security posture JSON
        run: |
          set -e
          if [ -f "private/quality/pipelines/sec_posture.py" ]; then
            python private/quality/pipelines/sec_posture.py --out "$LOG_DIR/security_posture.json"
          elif [ -f "private/quality/console/pipelines/sec_posture.py" ]; then
            python private/quality/console/pipelines/sec_posture.py --out "$LOG_DIR/security_posture.json"
          else
            # Fallback mínimo para no romper el job
            python - <<'PY'
import json, os
os.makedirs("private/infra/scripts/logs", exist_ok=True)
json.dump({"status":"fallback","items":[]}, open("private/infra/scripts/logs/security_posture.json","w"))
PY
          fi

      # ========= Validate with schema =========
      - name: Validate posture against schema (AJV)
        run: |
          set +e
          rc=0
          SCH="$SCHEMAS_DIR/security_posture.schema.json"
          OUT="$LOG_DIR/security_posture.json"
          if [ -f "$SCH" ] && [ -f "$OUT" ]; then
            ajv -c ajv-formats -s "$SCH" -d "$OUT" --strict=false \
              > "$LOG_DIR/security_posture_schema.txt" 2>&1 || rc=1
          else
            echo "Schema or output not found" > "$LOG_DIR/security_posture_schema.txt"
            rc=1
          fi
          echo "{\"ok\": $([ $rc -eq 0 ] && echo true || echo false) }" > "$LOG_DIR/security_schema_results.json"
          # No fallamos el workflow: dejamos el status en artefactos/summary
          exit 0

      - name: Summary
        run: |
          echo "## Security posture" >> $GITHUB_STEP_SUMMARY
          echo "- JSON: \`$LOG_DIR/security_posture.json\`" >> $GITHUB_STEP_SUMMARY
          echo "- Schema log: \`$LOG_DIR/security_posture_schema.txt\`" >> $GITHUB_STEP_SUMMARY
          echo "- Result: \`$LOG_DIR/security_schema_results.json\`" >> $GITHUB_STEP_SUMMARY

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-posture-${{ github.run_number }}
          path: ${{ env.LOG_DIR }}/**
          if-no-files-found: warn
