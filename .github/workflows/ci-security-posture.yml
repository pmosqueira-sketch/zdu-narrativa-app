name: CI · Security Posture

on:
  push:
    branches: [ main ]
    paths-ignore:
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.webp'
      - '**/*.pdf'
      - '**/*.md'
      - 'private/infra/scripts/logs/**'
      - '**/legacy/**'
  pull_request:
    branches: [ main ]
    paths-ignore:
      - '**/*.png'
      - '**/*.jpg'
      - '**/*.jpeg'
      - '**/*.gif'
      - '**/*.webp'
      - '**/*.pdf'
      - '**/*.md'
      - 'private/infra/scripts/logs/**'
      - '**/legacy/**'
  workflow_dispatch: {}

permissions:
  contents: read

env:
  LOG_DIR: private/infra/scripts/logs
  SECURITY_BASE: private/quality/data-contracts   # ← (1) base configurable
  PY_VERSION: "3.11"

jobs:
  security_posture:
    runs-on: ubuntu-latest
    timeout-minutes: 25

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PY_VERSION }}

      - name: Ensure dirs
        run: mkdir -p "${LOG_DIR}"

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install jsonschema

      - name: Inspect base
        run: |
          echo "SECURITY_BASE=${SECURITY_BASE}"
          if [ -d "${SECURITY_BASE}" ]; then
            echo "== SECURITY_BASE contents ==" && ls -la "${SECURITY_BASE}" || true
          else
            echo "::warning::SECURITY_BASE does not exist: ${SECURITY_BASE}"
          fi

      # Si tu script requiere más flags (p.ej. --owner), agrégalos aquí
      - name: Build Security Posture
        continue-on-error: true
        run: |
          python private/quality/pipelines/sec_posture.py \
            --base "${SECURITY_BASE}" \
            --owner "pmosqueira-sketch" \  # <-- si tu script lo requiere
            --out "${LOG_DIR}/security_posture.json"

      - name: Verify output exists
        run: |
          echo "== LOG_DIR contents =="
          ls -la "${LOG_DIR}" || true
          if [ ! -f "${LOG_DIR}/security_posture.json" ]; then
            echo "::warning::security_posture.json no encontrado. Creando vacío para no romper el upload."
            echo "{}" > "${LOG_DIR}/security_posture.json"    # ← (3) fallback
          fi
          echo "Size:"; wc -c "${LOG_DIR}/security_posture.json" || true
          echo "Head:"; head -c 500 "${LOG_DIR}/security_posture.json" || true

      - name: Upload artifact
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: security-posture
          path: ${{ env.LOG_DIR }}/security_posture.json
          if-no-files-found: warn

      - name: Summary
        if: always()
        run: |
          echo "## Security Posture" >> $GITHUB_STEP_SUMMARY
          echo "- Base: \`${SECURITY_BASE}\`" >> $GITHUB_STEP_SUMMARY
          echo "- Output: \`${LOG_DIR}/security_posture.json\`" >> $GITHUB_STEP_SUMMARY
